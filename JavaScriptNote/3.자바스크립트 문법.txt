1. 변수
    1) 프로그램에서 자료를 담아두는 공간임
    2) 변수에 필요한 자료를 저장해두면 프로그램을 실행하는 동안 언제든지 사용 가능함
    3) 필요한 이유
        - 재사용성
        - 가독성
            - 코드를 읽기가 쉬움
    4) 기본형
        - let 변수명
            - '변수를 선언한다'
    5) 코딩 컨벤션
        - 변수 이름은 영어 문자와 언더스코어, $로 시작할 수 있음
        - 자바스크립트는 영어 대소문자를 구별하고, 예약어는 변수 이름으로 쓸 수 없음
        - 여러 단어를 연결할 변수 이름을 정할 때는 중간에 _ 또는 - 또는 대문자를 섞어씀
        - 변수 이름은 의미있게 작성해야 함

2. 상수 (constant)
    1) 변수 중에서도 상수를 선언하는 예약어 = const
    2) 상수란 한번 값을 할당하면 프로그램 안에서 그 값이 변경할 수 없다는 특성이 있음
    3) 기본형
        - const 변수명(상수)

3. 자료형 (R value에 들어가는 것들)
    1) Data Type
    2) 구별
        - 원시 유형 primitive                                              예시
            - 숫자형(number)                                        let year = 2025;
                - 정수와 실수
            - BigInt  아주 큰 정수
            - 문자열    ' '나 " "로 값을 묶어 나타냄                   let year = "2025"
            - 논리형    true와 false라는 두 가지 값                   let isEmpty = true
        - 복합 유형
            - 배열      하나의 변수에 값을 여러 개 저장함               let seasons = [봄, 여름, 가을, 겨울]
                       여러 개의 데이터 값을 하나의 배열 이름으로 묶어서 선언함
            - 객체      함수와 속성을 함께 포함                      let date = new Date();
                       객체는 중괄호{}로 감싸서 생성함
                       내부에 있는 각각의 키(속성)는 문자열처럼 식별자 역할을 함
                       해당 키에 연결된 값(value)을 가지고 있음
        - 특수 유형
            - undefined 자료형 지정되지 않았을 때의 상태임
                        변수 선언만 하고 값을 할당하지 않은 변수
            - null      값이 유효하지 않을 때의 상태임
    3) 특수 기호 표시하기
        - 이스케이프 문자
            - 화면에는 표시되지 않지만 줄바꿈이나 탭처럼 문서에서 기능을 수행하는 문자
            - 특수 문자를 표시하려면 백슬래시(\) 다음에 입력해야 함
            - 종류
                \'   작은 따옴표 문자
                \"   큰 따옴표 문자
                \\   백슬래시 문자
                \b   백스페이스 문자
                \n   줄 바꿈 문자
                \t   탭 문자
                \d   8진수
                \x   16진수
    4) 템플릿 리터럴(Template Literal)로 문자열 연결하기
        - 백틱(`)을 사용해 문자열을 만듦
        - 템플릿 리터럴 안에 변수나 식을 넣을 때는 ${}로 묶고 그대로 표시할 수 있음

4. 자료형 변환하기
    1) 자료형을 미리 결정하지 않고 코드를 실행하는 동안 정하기 때문
    2) 동적 타입 언어
    3) 느슨한 자료형 체크 (weak data type check)
    4) 자동 형 변환
        - 문자열 값을 사칙연산에서 사용하면 자동으로 숫자형으로 변환됨

    5) 자바스크립트에서의 + 기호
        - 더하기 연산자
        - 연결 연산자
            - + 기호 앞이나 뒤에 문자열이 있으면 이 + 기호는 연결 연산자로 동작함
            - 숫자가 자동으로 문자열로 바뀌면서 2개의 문자열을 연결함
    6) 자료형 변환 함수
        - parseInt()
            - 문자열이나 논리형 값을 숫자로 변환함
        - parseFloat()
            - 문자열을 실수 숫자로 변환함
        - Number()
            - 문자열이나 논리형 값을 숫자로 변환함
        - String()
            - 숫자나 논리형 값을 문자열로 변환함
        - Boolean()
            - 괄호 안의 값을 논리형으로 변환함

5. Truthy와 Falsy
    1) 자바스크립트에서는 모든 값을 true와 false로 나타낼 수 있음
    2) false라고 할 만한 것을 falsy라고 함
        - 실제 값은 false 값임

        - false : 당연히 논리형 값 false는 falsy임
            0 : 숫자 0
            -0 : 음수 0
            "", '' : 빈 문자열
            null
            undefined
            NaN
    3) falsy한 값이 아닌 값은 모두 truthy한 값임
1. 배열
    1) 객체 : 한번에 서로 연관된 여러 데이터의 값을 저장할 수 있는 자료형
    2) 배열 : 순서가 있는 요소들의 집합, 여러 개의 데이터가 모여있는 리스트라고 할 수 있음

2. 배열 내장 함수
    1) forEach((element) => {..실제 구현 내용..})           // parameter가 하나일 경우
        - 매개변수로 함수를 전달함 (콜백함수)
            - 화살표형 함수로 작성함 <= 8. 함수표현식 참조
        - 요소 값만 필요할 때 사용함
        - 배열의 각 값을 하나씩 처리할 때 가장 단순한 형태임
       forEach((element, index) => {...})
        - 요소값과 인덱스(순서)가 모두 필요할 때 사용
        - 위치 정보가 필요할 때 사용함
       forEach((element, index, array) => {...})
        - 요소값, 인덱스, 원본 배열 전체가 모두 필요할 때 사용
        - 예) 반복 중에 전체 배열을 참조하거나, 다른 요소와 비교할 때
    2) map() 함수
        - 배열.map((element, index, array) => {
            // 반환값이 새로운 배열의 요소가 됨
        });
            - element : 배열의 현재 요소값
            - index : 현재 요소의 인덱스(optional)
            - array : 원본 배열 (optional)
        - 최대 3까지 매개변수를 받을 수 있음
        - 원하는 정보만 골라서 사용함
        - 반환값으로 새로운 배열이 만들어짐
    3) at()
        - 배열에서 특정 요소를 찾는 함수
    4) includes()
        - 매개변수로 받은 요소를 배열이 포함하고 있는지 판별하여 boolean(true or false)값으로 반환함
        - includes(searchElement, fromIndex)
            - searchElement 해당 요소가 있는지 검사
            - fromIndex 해당 인덱스 값부터 searchElement라는 요소가 있는지를 검사함
    5)  indexOf()
        - 특정 값을 가진 요소가 몇번째에 위치하는 요소인지를 찾아주는 함수
        - 배열에 존재하지 않는 값을 매개변수로 넣어 해당 값을 찾으려고 한다면 indexOf 값은 항상 -1 값을 반환함
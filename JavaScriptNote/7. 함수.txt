1. 함수 (function)
    1) 여러 동작을 묶은 덩어리
    2) 함수 선언 및 호출
        - 선언 기본형
            - function 함수명() {
                명령
            }
        - 호출 기본형
            - 함수명 ()
            - 함수명 (변수)

2. 변수 스코프 (scope)
    1) var 예약어를 사용한 변수
        - ES6 버전 이전에는 변수 선언 시 var 예약어를 사용함
        - ES6 버전 이후에는 변수 선언 시 let, const 
    2) 지역 변수와 전역 변수
        - 스코프(scope)
            - 자바스크립트에서 변수를 선언하고 사용할 때 적용되는 범위
            - 변수가 어디까지 유효한지 범위를 가리키는 영역
            - 함수 안에서 사용하는 변수 (지역변수)
            - 함수 밖에서 사용하는 변수 (전역변수)
        - var 예약어를 사용해서 만든 변수
            - 함수 안에서 사용하는 변수
                - 함수 안에서 선언한 var 변수는 해당 함수에서만 사용하고 함수 밖에서는 사용할 수 없음
            - 함수 밖에서 사용하는 변수
                - 특정 함수가 아니라 스크립트 코드 전체에서 사용할 수 있음
            - 함수 레벨 변수 (함수 스코프 가짐)
            - var 변수와 호이스팅(hoisting)
                - 변수 끌어올림
            - 변수 재선언

3. let과 const를 사용한 변수 특징
    1) ES6에서 변수 선언하는 예약어로 추가됨
        - 되도록이면 let 예약어를 사용할 것을 권장함
    2) 스코프(scope)의 범위
        - var는 함수 영역(레벨)의 스코프를 가짐
        - let, const는 블록 영역의 스코프를 가짐
    3) 블록 안에서만 쓸 수 있는 변수
        - let이나 const 예약어로 선언한 변수는 그 변수를 선언한 블록({}로 묶은 부분)에서만 유효하고 블록을 벗어나면 사용 불가함
    4) 재선언할 수 없는 let 변수
    5) 재선언도 재할당도 할 수 없는 const 변수
        - let은 변수를 선언할 때 사용하는 예약어
        - const는 변하지 않는 값을 변수에 담아서 사용하는 경우
    6) 호이스팅이 없는 변수
        - 선언하기 전에 사용하면 오류 발생함

4. 자바스크립트 변수 사용
    1) 전역 변수는 최소한으로 사용함
        - 편리하지만 그만큼 오류가 발생할 확률이 높음
    2) 변수 선언할 때는 var보다 let(일반변수)이나 const(상수)를 사용함
        - var 선언한 변수는 오류가 발생하지 않을 때가 있음
            - 현업하는 과정에서 문제 발생 소지가 높음
    3) for문에서 카운터 변수를 사용할 때는 let 예약어를 사용 권장

5. 함수 만들기
    1) 매개변수, 인수, return
    2) 함수 선언할 때 매개변수 지정하기
 
6. 매개변수 기본값 지정하기
    1) ES6부터 함수에서 매개변수를 선언할 때 기본값을 지정하는 기능 생김
    
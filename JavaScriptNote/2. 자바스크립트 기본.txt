1. 표현식(expression)과 문(statement)
    1) (표현)식(expression)
        - 연산식, 실제 값, 함수 실행
        - 어떤 값을 만들어 낼 수 있다면 모두 식이 될 수 있음
        - 식은 변수에 저장됨
        - 예) 5;              // 숫자도 식
             "안녕하세요";     // 문자열도 식
             Ewha * 2.0;     // 연산식도 식
    2) 문(statement)
        - 명령이라고 할 수 있음
        - 문의 끝에는 세미콜론(;)을 붙여서 구분함
        - 예) 조건문, 반복문

2. 간단한 입출력 방법
    1) 알림창 출력하기
        - alert
            - 가장 많이 사용하는 대화상자
            - 단순히 메시지를 보여주기만 할 뿐 다른 기능이 없음
            - 기본형
                - alert(메시지)
    2) 확인창 출력하기
        - confirm
            - 사용자가 [확인]이나 [취소] 버튼 중 직접 클릭함
            - 그 선택한 결과에 맞게 프로그램이 동작함 (true or false 값에 따라 변화)
            - 기본형
                - confirm(메시지)
    3) 프롬프트 창에서 입력받기
        - prompt
            - 텍스트 필드가 있는 작은 창
            - 텍스트 필드 안에 간단한 메시지를 입력할 수 있음
                - 이 값을 결과적으로 프로그램 내에서 활용함
                - 그 내용을 가져와 프로그램에서 사용할 수 있음
            - 기본형
                - prompt(메시지)
                - prompt(메시지, 기본값)
    4) 웹브라우저 화면에 출력을 담당하는 document.write()문
        - 웹 문서(document)에서 write() 괄호 안의 내용을 표시하는 명령문
    5) 콘솔 창에 출력하는 console.log()문

3. 자바스크립트 스타일 가이드
    0) 코딩 컨벤션, 코딩 스타일, 표준 스타일

    1) 코드를 보기 좋게 들여쓰기 해야함
    2) 세미콜론으로 문장을 구분함
    3) 공백을 넣어 읽기 쉽게 작성함
    4) 코드를 잘 설명하는 주석을 작성함
        - // 한 줄 주석
        - /* */ 여러 줄 주석
    5) 식별자(변수)는 정해진 규칙을 지켜서 작성함
        - 첫 글자는 반드시 영문자, 언더스코어(_), 달러($) 기호로 시작해야 함
        - 그 이후에는 영문자나 언더스코어, 달러, 숫자 등 작성 가능
        - 두 단어 이상이 모여 하나의 식별자를 만들 경우
            - 사이에 공백은 불가
            - 단어와 단어 사이에 하이픈(-) 혹은 언더스코어(_)로 연결하여 사용함
            - 첫번째 단어는 소문자로 시작하고 두번째 단어는 대문자로 시작하는 것이 일반적임
    6) 예약어는 식별자로 사용 불가
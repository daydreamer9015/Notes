1. java.lang 패키지
    1) 모든 프로그램에서 가장 많이 사용하는 기본 클래스를 포함하고 있는 패키지
    2) 프로그래밍 시에 import 하지 않아도 자동으로 import 됨

2. Object 클래스
    1) 모든 클래스의 최상위 클래스
    2) 모든 클래스는 Object 클래스를 상속받음
        - class Student => class Student extends Object : extends 생략되어 있음 
    3) Object 클래스의 메서드 중 일부는 재정의해서 사용할 수 있음
    4) String toString()
        - 객체를 문자열로 표현하여 반환함
            - 클래스 이름@해시코드 값(16진수)
                - 해시코드값은 자바 가상 머신이 힙 메모리에 저장한 인스턴스의 주소값임
        - 재정의하여 객체에 대한 설명이나 특정 멤버 변수값을 반환함
            - String, Integer 등 여러 JDK 내의 클래스에서 toString() 메서드 자체가 이미 재정의 되어 있음
    5) boolean equals(Object obj)
        - 객체의 같음을 비교하는 메서드
            - 두 인스턴스의 주소값을 비교
        - 동일성
            - 물리적 동일성 : 두 인스턴스의 메모리 주소가 같음
            - 논리적 동일성 : 두 인스턴스가 논리적으로 같음
                - equals() 메서드를 재정의하여 사용함
    6) int hashCode()
        - 해시(hash)
            - 정보를 저장한다거나 검색할 때 사용하는 자료 구조
            - 정보를 어디에 저장할 것인지, 어디에서 가져올 것인지 해시 함수를 사용하여 구현함
                - 해시 함수는 key값을 매개변수로 넣으면 그 객체가 저장되어야 할 위치나 이미 저장된 위치값을 반환해주는 함수임
        - 두 인스턴스(객체)가 같다면 hashCode() 메서드에서 반환하는 해시코드값이 같아야 함
            - 논리적으로 두 객체가 같은 때 같은 해시코드값을 반환하도록 hashCode() 메서드를 재정의 해야 함

3. String 클래스
    1) String 클래스 선언하는 두 가지 방법
        - String str1 = new String("abc"); => 생성자의 매개변수로 문자열 객체 생성
        - String str2 = "abc"; => 문자열 상수를 가리키는 방식. 리터럴값 바로 할당
1. 상속
    1) 객체 지향 프로그래밍의 핵심 요소 중 하나
    2) 기존 클래스의 필드와 메서드를 새로운 클래스에서 재사용하게 해줌
    3) 기존 클래스의 속성과 기능을 그대로 물려받음
    4) 상속하려면 extends 키워드를 사용하면 됨
    5) extends 대상은 하나만 선택할 수 있음

2. 상속 관계
    1) 용어 정리
        - 부모 클래스(슈퍼 클래스)
            - 상속을 통해 자신의 필드와 메서드를 다른 클래스에 제공하는 클래스
        - 자식 클래스(서브 클래스)
            - 부모 클래스로부터 필드와 메서드를 상속받는 클래스
    2) 단일 상속
        - 자바는 다중 상속을 지원하지 않음
        - 부모를 하나만 선택할 수 있음
            - 부모가 또 다른 부모를 하나 가지는 것은 가능

3. 상속과 메모리 구조
    1) ElectricCar electricCar = new ElectricCar();
        - ElectricCar 객체 뿐만 아니라 상속 관계에 있는 Car 객체까지 함께 포함해서 인스턴스를 생성함
        - 상속 관계를 사용하면 부모 클래스도 함께 포함해서 생성함

        - electricCar.move();
            - 본인 타입에서 move 찾기
            - 본인 타입에 없으면 부모 타입에서 찾기
    2) 상속 관계의 객체 생성
        - 그 내부에는 부모와 자식이 모두 생성됨
    3) 상속 관계에서 기능 추가와 클래스 확장

4. 상속과 메서드 오버라이딩
    1) 부모 타입의 기능을 자식에서는 다르게 재정의할 수 있음
    2) 부모에게서 상속 받은 기능을 자식이 재정의하는 것
        - 메서드 오버라이딩(Overriding)
        - @Override
            - @이 붙은 부분을 애노테이션이라고 함
            - 특별한 주석
                - 프로그램이 읽을 수 있는 특별한 주석
            - 컴파일러는 이 애노테이션을 보고 메서드가 정확히 오버라이드 되었는지 확인함
        - 상위 클래스의 메서드를 오버라이드(재정의) 하는 것임

5. 오버로딩(Overloading)과 오버라이딩(Overriding)
    1) 메서드 오버로딩
        - 메서드 이름이 같고 매개변수(파라미터)가 다른 메서드
        - 같은 이름의 메서드를 여러 개 정의함
    2) 메서드 오버라이딩
        - 하위 클래스에서 상위 클래스의 메서드를 재정의하는 것
        - 상속 관계에서 사용함
        - 메서드 오버라이딩 조건
            - 메서드 이름 : 같아야 함
            - 메서드 매개변수(파라미터) : 타입, 순서, 개수가 같아야 함
            - 반환 타입 : 같아야 함
            - 접근 제어자 : 상위클래스보다 더 제한적이어서는 안됨
        - static, final, private 키워드가 붙은 메서드는 오버라이딩 될 수 없음
        - 부모의 생성자 오버라이딩은 할 수 없음

6. 상속과 접근 제어
    1) 기호
        + public        모든 외부 호출을 허용
        # protected     같은 패키지 안에서 호출 허용, 패키지가 달라도 상속 관계의 호출은 허용
        ~ (default)     같은 패키지 안에서만 호출 허용
        - private       모든 외부 호출을 막음

7. super
    1) 부모 클래스에 대한 참조를 나타냄
        - 부모 클래스의 기능을 사용하는 것을 확인할 수 있음
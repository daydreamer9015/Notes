1. Intro
    1) 객체 지향 프로그래밍 대표적인 특징
        - 캡슐화, 상속, 다형성(Polymorphism)
    2) 다형성
        - 다양한 형태, 여러 형태를 뜻함
        - 보통 하나의 객체는 하나의 타입으로 고정되어 있음
        - 다형성을 사용하면 하나의 객체가 다른 타입으로도 사용되어질 수 있음
        - 다형적 참조
            - 부모 타입의 변수는 자식 인스턴스를 참조할 수 있음
            - 부모는 자식을 담을 수 있음

            - Parent parent = new Parent();
              Child child = new Child();

              Parent poly = new Parent();
              Parent poly = new Child();
              Parent poly = new Grandson();     // Child 하위에 손자가 있다면 가능
            
            - 자바에서 부모 타입은 자신은 물론이고 자신을 기준으로 모든 자식 타입을 참조할 수 있음
            - 이것이 '다양한 형태를 참조할 수 있다'는 뜻의 다형적 참조

2. 다형성(다형적 참조)의 한계
    1) 캐스팅 -> 타입 바꿈
        - 업캐스팅(Upcasting) : 부모 타입으로 변경 (자동임)
        - 다운캐스팅(Downcasting) : 자식 타입으로 변경 (강제 형변환)
    2) 일시적 다운캐스팅
    3) 업캐스팅
        - 다운캐스팅과 반대로 현재 타입을 부모 타입으로 변경하는 것
        - 객체를 생성하면 해당 타입의 상위 부모 타입은 모두 함께 생성됨
            - 위로만 타입을 변경하는 업캐스팅은 메모리상에 인스턴스가 모두 존재하기 때문에 항상 안전함
            - 캐스팅을 생략할 수 있음

3. 다운캐스팅
    1) 구분
        - 다운캐스팅이 가능한 경우
        - 다운캐스팅이 불가능한 경우
    2) 주의점
        - 다운캐스팅은 잘못하면 심각한 런타임 오류 발생할 수 있음
            - 인스턴스에 존재하지 않는 하위 타입으로 캐스팅하는 문제가 발생할 수 있음
            - 객체 생성하면 부모 타입은 모두 함께 생성되지만 자식 타입은 생성되지 않음
            - 개발자가 이런 문제를 인지하고 사용해야 함
                - 명시적으로 캐스팅을 해주어야 함

4. 컴파일 오류 vs 런타임 오류
    1) 컴파일 오류
        - 변수명 오타 등 자바 프로그램 실행하기 전 발생하는 오류
        - IDE에서 즉시 확인할 수 있기 때문에 안전하고 좋은 오류임
    2) 런타임 오류
        - 프로그램이 실행되고 있는 시점에 발생하는 오류
        - 매우 안 좋은 오류
            - 고객이 해당 프로그램을 실행하는 도중에 발생하기 때문에

5. instance of
    1) 인스턴스의 타입을 확인

6. 다형성과 메서드 오버라이딩
    1) 오버라이딩된 메서드 - 부모도 갖고 있음 but 우선권은 항상 오버라이딩 된 쪽에 있음

7. 정리
    1) 다형적 참조
        - 하나의 변수 타입으로 다양한 자식 인스턴스를 참조할 수 있는 기능
    2) 메서드 오버라이딩
        - 기존 기능을 하위 타입에서 새로운 기능으로 재정의
    
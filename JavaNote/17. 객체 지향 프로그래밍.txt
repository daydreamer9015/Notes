1. 절차 지향 프로그래밍
    1) 절차를 지향하는 방식
    2) 실행 순서를 중요하게 생각하는 방식
    3) 프로그램의 흐름을 순차적으로 따르며 처리하는 방식
    4) "어떻게"를 중심으로 프로그래밍하는 것

2. 객체 지향 프로그래밍
    1) 객체를 지향하는 방식
    2) 객체를 중요하게 생각하는 방식
    3) 실제 세계의 사물이나 사건을 객체로 보고 이러한 객체들 간의 상호작용을 중심으로 프로그래밍하는 방식
    4) "무엇을"을 중심으로 프로그래밍하는 것

3. 두 방식의 중요한 차이
    1) 절차 지향은 데이터와 해당 데이터에 대한 처리 방식이 분리되어 있음
    2) 객체 지향은 데이터와 해당 데이터에 대한 행동(메서드, 함수)이 하나의 '객체(클래스)' 안에 함께 포함되어 있음 => 캡슐화(Encapsulation)

4. Step별 코드 변화
    1) 요구 사항
        - 은행 계좌를 개설해야 한다.
        - 계좌에 입금할 수 있어야 한다.
        - 계좌에서 출금할 수 있어야 한다.
        - 계좌 상태를 확인할 수 있어야 한다.
    2) 전체 변화 개요
        - step1
            - 절차지향
                - main() 중심
                - 지역 변수
        - step2
            - 데이터 분리
                - main() + BankAccountData 클래스
                - 필드, 멤버 변수
        - step3
            - 기능 모듈화, 메서드 추출(분리)
                - main() + (별도)메서드
            - 중복 제거, 메서드 이름 추가됨
        - step4
            - 완전 객체 지향
                - main이 아닌 클래스 중심
                    - 멤버 변수, 메서드
    3) 변화 분석
        - 데이터 위치
            - main() 내부 => 별도 클래스
            - 데이터 접근 방법
                - 변수명 => 객체.필드명 => 메서드 호출(객체.메서드명())
            - 클래스
                - 데이터와 메서드 결합
                - 객체가 자신의 일 처리

5. 클래스와 메서드
    1) 클래스는 데이터인 멤버 변수 + 
    2) 기능 역할을 하는 메서드도 포함할 수 있음 => 클래스 = 멤버 변수(데이터) + 메서드(기능)

6. Lab)
    1) 음악 플레이어 만들기
        - 요구사항
            - 음악 플레이어를 켜고 끌 수 있어야 한다.
            - 음악 플레이어 볼륨을 증가, 감소할 수 있어야 한다.
            - 음악 플레이어 상태를 확인할 수 있어야 한다.
    2) 직사각형 프로그램
        - 요구사항
            - 넓이와 둘레를 구하시오.
            - 정사각형 여부를 구하시오.

7. 객체란?
    1) 세상의 모든 사물을 단순하게 추상화해보면 '속성(데이터)과 기능'이라는 두 가지로 설명 가능함. 우리가 비즈니스하는 모든 대상
    2) 이렇게 단순화하면 세상에 있는 객체들을 컴퓨터 프로그램으로 쉽게 설계가 가능함
    3) 지금은 객체 지향 프로그래밍이 가장 많이 사용됨
    4) 실세계와 객체가 항상 1:1로 매칭되는 것은 아님
    5) 속성과 기능을 하나로 묶은 것
        - 캡슐화, 상속, 다형성, 추상화(추상 클래스, 인터페이스), 메시지 전달 등 다양한 특징이 있음

8. 캡슐화 (Encapsulation)
    1) 객체 지향 프로그래밍의 중요한 개념 중 하나임
    2) 데이터와 해당 데이터를 처리하는 메서드를 하나로 묶어서 클래스 외부에서의 접근을 제한하는 것을 말함
    3) 캡슐화를 통해 데이터의 직접적인 변경을 방지하거나 제한할 수 있음
    4) 속성과 기능을 하나로 묶고, 외부에는 꼭 필요한 기능만 노출하고 나머지는 모두 내부로 숨기는 것
    5) 요약
        - 데이터를 숨김
            - 객체의 데이터는 객체가 제공하는 기능인 메서드를 통해서 접근해야 함
        - 기능을 숨김
            - 외부에서 사용하지 않고 내부에서만 사용하는 기능들
                - 이러한 기능들 모두 감추는 것이 좋음
            - 사용자 입장에서 꼭 필요한 기능만 외부에 노출함
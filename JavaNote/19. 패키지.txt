1. 프로그램
    1) 아주 작은 프로그램
        - Order
          User
          Product
    2) 큰 프로그램
        - User
          UserManager
          UserHistory
          Product
          ProductCatalog
          ProductImage
          Order                         => 패키징이 필요함
          OrderService
          OrderHistory
          CartItem
          ShoppintCart
          Payment
          PaymentHistory
          Shipment
          ShipmentTracker
          ...
    3) 큰 프로그램 => 카테고리 생성하여 분류하고 패키징 처리
        - User
            - User
            - UserManager
            - UserHistory
        - Product
            - Product
            - ProductCatalog
            - ProductImage
        - Order
            - Order
            - OrderService
            - OrderHistory
        - Cart
            - CartItem
            - ShoppingCart
        - Payment
            - Payment
            - PaymentHistory
        - Shipping
            - Shipment
            - ShipmentTracker

2. 패키지
    1) 사용자와 같은 위치에 있을 때에는 같은 패키지 소속
        - 패키지 경로를 생략해도 됨
    2) 사용자와 다른 위치
        - 서로 다른 패키지
        - 패키지 전체 경로를 포함해서 클래스를 적어줘야 함

3. import
    1) 코드에서 첫 줄에는 package를 사용하고 다음 줄에는 import를 사용함
        - import를 쓰면 다른 패키지에 있는 클래스를 가져와서 사용할 수 있음
        - 특정 패키지에 포함된 모든 클래스를 사용하고자 할 때
            - import 시점에 *(별표)를 사용하면 됨
                - 예) import packagee.a.*;

4. 클래스 이름 중복
    1) 클래스 이름이 같아도 패키지 이름으로 구분해서 같은 이름 클래스를 사용할 수 있음

5. 패키지 규칙
    1) 패키지의 이름과 위치는 폴더(디렉토리) 위치와 같아야 함 => 필수
    2) 패키지 이름은 모두 소문자를 사용함 => 관례
    3) 패키지 이름의 앞부분에는 일반적으로 회사의 도메인 이름을 거꾸로 사용함
        - com.sun.jarsinger
        - kr.co.choongang
6. 패키지와 계층 구조
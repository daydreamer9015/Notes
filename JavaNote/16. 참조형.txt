1. 기본형 vs 참조형 (pass by value)
    1) 자바에서 참조형을 이해하는 것은 매우 중요함
        - 기본형 (primitive type) ; 사용자가 직접 값을 입력함
            - byte, short, int, long, float, double, char, boolean
            - 사용하는 값을 변수에 직접 넣을 수 있는 기본형
            - 기본형은 소문자로 시작함
            - 기본형은 자바가 기본으로 제공하는 데이터 타입임
                - 개발자가 새로 정의할 수 없음
        - 참조형 (reference type)
            - 데이터를 접근하기 위한 참조(주소)를 저장하는 데이터 타입을 참조형이라 함
            - 객체 또는 배열에 사용됨
            - 개발자가 내가 요구사항 해결하는데 필요한 것만 담아서 새로 정의할 수 있음
            - 개발자가 참조형인 클래스만 직접 정의할 수 있음
        - 참고 String
            - 클래스의 일부임. 즉, 참조형
            - 기본형처럼 문자 값을 바로 대입할 수 있음
            - 문자는 매우 자주 다루기 때문에 마치 기본형처럼 쓸 수 있게 편의를 제공하는 것

2. 기본형과 변수 대입
    1) 변수 대입은 변수에 들어있는 값을 복사해서 대입함

3. 참조형과 변수 대입
    1) dataA 변수는 Data 클래스를 통해서 객체를 만들었기 때문에 참조형
        - dataA 변수는 Data형 객체의 참조값을 저장함

4. 기본형 vs 참조형 --메서드 호출
    1) 원칙 : 자바는 항상 변수의 값을 복사해서 대입함
        - 항상 변수에 값을 대입하는 것은 변수에 들어있는 값을 복사해서 대입하는 것
            - 기본형이면 변수에 들어있는 실제 사용하는 값을 복사해서 대입
            - 참조형이면 변수에 들어있는 참조값을 복사해서 대입
    2) 기본형과 메서드 호출
    3) 참조형과 메서드 호출
        - 메서드 호출
        - 메서드 안에서 값을 변경
    4) 기본형과 참조형의 메서드 호출
        - 자바에서 메서드의 매개변수(파라미터)는 항상 값에 의해 전달됨
            - 이 값이 실제 값이냐, 참조(메모리주소)값이냐에 따라 동작이 달라짐
                - 기본형 : 해당 값이 복사되어 전달됨
                    - 메서드 내부에서 매개변수의 값을 변경해도 호출자의 변수값(원본)에는 영향을 주지 않음
                - 참조형 : 메서드로 참조형 데이터를 전달하면 참조값이 복사되어 전달됨
                    - 메서드 내부에서 매개변수로 전달된 객체의 멤버변수를 변경하면 메인에 있는 호출자의 변수값(원본)도 변경됨
            - 메서드의 객체 반환
1. 배열의 선언과 생성
    1) 같은 타입의 변수를 사용하기 편하도록 하나로 묶어둔 것 = 배열

2. 배열 사용
    1) 인덱스
    2) 배열은 변수와 사용법이 비슷하나 [] 사이에 숫자 번호를 넣어주면 됨
    3) 배열의 위치를 나타내는 이 숫자 번호를 인덱스(index)라고 함
    4) 배열의 값 대입
    5) 배열 값 읽기

3. 기본형 vs 참조형
    1) 기본형 (Primitive Type)
        - 사용하는 값을 직접 넣을 수 있는 기본형
        - int, long, double, float, boolean ...
    2) 참조형 (Reference Type)
        - 데이터에 접근하기 위한 참조(메모리 주소)를 저장하는 데이터 타입
        - 객체, 클래스를 담을 수 있는 변수들, 배열

4. 2차원 배열
    1) 행과 열로 구성됨
    2) arr[행][열], arr[row][column]

5. 향상된 for문 (Enhanced For Loop)
    1) 각각의 요소를 탐색함
    2) for문은 보다 더 편리함
    3) 구문
        - for(변수 : 배열 또는 컬렉션) {
            // 배열 또는 컬렉션 데이터의 요소를 순회하면서 수행할 작업
        }

6. 배열의 입력과 출력(lab)
    1) 5개 정수 입력 받아서 배열에 저장, 입력 순서대로 출력하기
        - 출력 포맷 : , 쉼표를 사용해서 구분하기 / 마지막에는 쉼표를 넣지 않기
        - 예) 1
              2
              3
              4
              5
              출력
              1, 2, 3, 4, 5
    2) 사용자로부터 n개의 정수를 입력받아 배열에 저장한 후, 배열 내에서 가장 작은 수와 가장 큰 수를 출력하시오.
        - minNum, maxNum 변수 설정
    3) 사용자로부터 4명 학생의 국어, 수학, 영어 점수를 입력받아 각 학생의 총점, 평균을 계산하시오.

1. 내부 클래스(Inner Class) 정의
    1) 클래스 내부에 선언한 클래스
        class Out {
            class In {

            }
        }
    2) 참고
        class ABC {
            int n1;         // 인스턴스 변수
            static int n2;  // 정적 변수

            public void abc() {
                int i;      // 로컬(지역) 변수
            }
        }
        
        class ABC {         // 외부 클래스
            class In {      // 인스턴스 내부 클래스
                static class sIn {  // 정적 내부 클래스

                }
            }

            public void abc() {
                class Local {   // 지역 내부 클래스

                }
            }
        }
    3) 종류
        - 인스턴스 내부 클래스 (Instance Inner Class)
        - 정적 내부 클래스 (Static Inner Class)
        - 지역 내부 클래스 (Local Inner Class)
        - 익명 내부 클래스 (Anonymous Inner Class)

2. 인스턴스 내부 클래스(Instance Inner Class)
    1) 외부 클래스 내부에서만 생성하여 사용하는 객체를 선언할 때 사용함
    2) 외부 클래스를 먼저 생성하고 인스턴스 내부 클래스를 생성해서 사용함

3. 정적 내부 클래스(Static Inner Class-- InStaticClass)
    1) 외부 클래스의 생성과 상관없이 내부 클래스를 사용하고 싶다면 정적 내부 클래스를 선언하면 됨
    2) 정리
        - 일반 메서드 (inTest())
            - 외부 클래스의 인스턴스 변수 사용 불가함 (num)
            - 외부 클래스의 정적 변수 사용 (sNum)
            - 정적 내부 클래스의 인스턴스 변수 사용 (inNum)
            - 정적 내부 클래스의 정적 변수 사용 (SInNum)
        - 정적 메서드 (sInTest())
            - 외부 클래스의 인스턴스 변수 사용 불가 (num)
            - 외부 클래스의 정적 변수 사용 (sNum)
            - 내부 클래스의 인스턴스 변수 사용 불가 (inNum)
            - 내부 클래스의 정적 변수 사용 (SInNum)

4. 지역 내부 클래스 (Local Inner Class)
    - 지역 변수처럼 메서드 내부에 클래스를 정의하여 사용하는 것
    - 메서드 안에서만 사용 가능함

5. 익명 내부 클래스 (Anonymous Inner Class)
    1) 이름이 없는 클래스
    2) 클래스 정의와 객체 생성을 동시에 수행
    3) 주로 인터페이스나 추상클래스를 재사용하지 않고 일회성으로 구현할 때 사용
    4) 코드의 간결성과 캡슐화를 제공하지만 재사용성은 낮음 (실무에서는 많이 쓰임)

6. 정리
                            구현 위치                               사용할 수 있는 외부 클래스 변수                                 생성방법
----------------------------------------------------------------------------------------------------------------------------------------------------------------
    1) 인스턴스 내부 클래스  외부 클래스 인스턴스 변수와 동일               외부 인스턴스 변수, 외부 정적 변수        외부 클래스를 먼저 만든 후 내부 클래스 생성
    2) 정적 내부 클래스     외부 클래스 인스턴스 변수와 동일                외부 정적 변수                         외부 클래스와 무관하게 생성
    3) 지역 내부 클래스     메서드 내부에 구현                            외부 인스턴스 변수, 외부 정적 변수        메서드를 호출할 때 생성
    4) 익명 내부 클래스     메서드 내부에 구현, 변수에 대입하여 직접 구현    외부 인스턴스 변수,                      메서드를 호출할 때 생성,
                                                                     외부 정적 변수                          인터페이스 자료형 변수에 대입할 때 new 예약어를 사용하여 생성
1. SubQuery
    1) 쿼리문 내에 또 다른 쿼리문이 있는 형태
    2) 서브 쿼리는 메인 쿼리에 포함되는 형태
    3) ()를 사용해 감싸는 형태
        - 서브 쿼리는 반드시 소괄호로 감싸 사용함
        - 서브 쿼리는 메인 쿼리(주 쿼리)를 실행하기 전에 1번만 실행됨
        - 비교 연산자와 함께 서브 쿼리를 사용하는 경우
            - 서브 쿼리를 연산자 오른쪽에 기술해야 함
    4) 서브 쿼리 내부에는 order by를 사용할 수 없음
    5) 사용 가능한 위치
        - 스칼라 서브 쿼리 (Scalar SubQuery)
            - 위치
                - SELECT,
                  WHERE,
                  HAVING
            - 반환 형태 : 단일행
            - 연산자 : =, <, > 등
        -  다중행 서브 쿼리
            - 위치
                - WHERE,
                  HAVING
            - 반환 형태 : 다중 행
            - 연산자 : IN, ANY, SOME, ALL
                - > ANY (서브 쿼리) : 서브 쿼리가 반환한 여러 결과 값 중 어느 하나보다 크면 참
                                     최소값보다 크면 참
                - < ANY (서브 쿼리) : 최대값보다 작으면 참

                - > ALL (서브 쿼리) : 서브 쿼리가 반환한 여러 결과 값 모두보다 커야만 참
                                     최대값보다 커야 참
                - < ALL (서브 쿼리) : 최소값보다 작으면 참
                - ALL vs ANY 정리

                        ALL 연산자                             ANY 연산자
                    --------------------------------------------------------------
                    모든 값과 비교하여 조건 만족        하나의 값과만 비교하여 조건 만족
                    < ALL : 최소값보다 작아야 TRUE     < ANY : 최대값보다 작으면 TRUE
                    > ALL : 최대값보다 커야 TRUE       > ANY : 최소값보다 크면 TRUE
                    더 엄격한 조건 (AND 논리)          더 느슨한 조건 (OR 논리)
                - EXISTS
                    - 존재 여부만 확인하고 스캔하지 않음 (상대적으로 속도 빠름)
                    - 존재하면 TRUE / 존재하지 않으면 FALSE
        - 인라인 뷰(INLINE VIEW)
            - FROM 문에서 서브 쿼리 사용
            - 테이블처럼 사용됨
                - 다른 테이블과 조인 가능
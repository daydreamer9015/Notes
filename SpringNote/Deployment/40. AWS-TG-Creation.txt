* AWS 배포 단계
    1) Phase 1 : 준비 단계
        - IAM 사용자 생성, Access Key, Git 브랜치 생성
    2) Phase 2 : 로컬 검증
        - Dockerfile, .dockerignore, docker-compose.yml, application.yml
        - 로컬 빌드 및 테스트
    3) Phase 3 : AWS 인프라
        - ECR Registry, ECS Cluster, Security Groups, Target Groups
        - Application Load Balancer, Parameter Store, CloudWatch Logs
    4) Phase 4 : 배포 자동화

* CI/CD 파이프라인 아키텍처

    ---------------------------------------------------------------------------
        Github Registry
            - sr/main/java
            - sr/main/resources
            - Dockerfile
            - task-definition.json
            - .github/workflows/deploy-to-ecs.yml
        -----------------------------------------------
                            |
                            | git push
                            |
                            ▼
        -----------------------------------------------
            Github Actions workflow
        1) Checkout code
        2) Configure AWS credentials
        3) Login to ECR
        4) Build & Push Docker image
        5) Update Task definition
        6) Deploy to ECS
    ---------------------------------------------------------------------------
                            |
                            | AWS API Calls
                            |
                            ▼
    ---------------------------------------------------------------------------
                        AWS Cloud
        ------------            --------------------------------------------
         Amazon ECR                     Amazon ECS
           Docker   <-----------          Task      
           Image        Pull              Definition
                                            |
                                            |
                                            |
                                            ▼
                                        ECS Service
                                            |
                                            |
                                            |
                                            ▼
                                        Fargate
                                        Task
                                        (Running)
        ------------------------------------|--------------------
         Application Load Balancer
        Listener
        HTTP:80 -----------▶ Target
                              Group
                              (Blue)
        --------------------|------------------------------------
                            |
                            |
        ---------------------------------------------------------
                           VPC
            ---------------            ---------------
             Public Subnet              Public Subnet
             ap-northeast-2a            ap-northeast-2c

                ECS Task
                (Container)
                Port : 8081
            --------------------
                    |
                    | JDBC
                    |
                    ▼
            --------------------
                Amazon RDS MySQL
                 Port : 3306
                 Database
        ---------------------------------------------------
            